package com.eventura.entities;
// Generated Jun 21, 2025, 10:45:01â€¯AM by Hibernate Tools 4.3.6.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.FetchType;
import jakarta.persistence.GeneratedValue;
import static jakarta.persistence.GenerationType.IDENTITY;
import jakarta.persistence.Id;
import jakarta.persistence.JoinColumn;
import jakarta.persistence.ManyToOne;
import jakarta.persistence.OneToMany;
import jakarta.persistence.Table;
import jakarta.persistence.Temporal;
import jakarta.persistence.TemporalType;

/**
 * Vouchers generated by hbm2java
 */
@Entity
@Table(name = "vouchers")
public class Vouchers implements java.io.Serializable {

	private Integer id;
	private Vendors vendors;
	private double discountValue;
	private String discountUnit;
	private Date startTime;
	private Date endTime;
	private double minOrderValue;
	private double maxDiscountAmount;
	private boolean redeemAllowed;
	private Date createdAt;
	private Date upadetedAt;
	private Date deletedAt;
	private Set<VouchersCampaigns> vouchersCampaignses = new HashSet<VouchersCampaigns>(0);

	public Vouchers() {
	}

	public Vouchers(double discountValue, String discountUnit, Date startTime, Date endTime, double minOrderValue,
			double maxDiscountAmount, boolean redeemAllowed, Date createdAt, Date upadetedAt) {
		this.discountValue = discountValue;
		this.discountUnit = discountUnit;
		this.startTime = startTime;
		this.endTime = endTime;
		this.minOrderValue = minOrderValue;
		this.maxDiscountAmount = maxDiscountAmount;
		this.redeemAllowed = redeemAllowed;
		this.createdAt = createdAt;
		this.upadetedAt = upadetedAt;
	}

	public Vouchers(Vendors vendors, double discountValue, String discountUnit, Date startTime, Date endTime,
			double minOrderValue, double maxDiscountAmount, boolean redeemAllowed, Date createdAt, Date upadetedAt,
			Date deletedAt, Set<VouchersCampaigns> vouchersCampaignses) {
		this.vendors = vendors;
		this.discountValue = discountValue;
		this.discountUnit = discountUnit;
		this.startTime = startTime;
		this.endTime = endTime;
		this.minOrderValue = minOrderValue;
		this.maxDiscountAmount = maxDiscountAmount;
		this.redeemAllowed = redeemAllowed;
		this.createdAt = createdAt;
		this.upadetedAt = upadetedAt;
		this.deletedAt = deletedAt;
		this.vouchersCampaignses = vouchersCampaignses;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "vendor_id")
	public Vendors getVendors() {
		return this.vendors;
	}

	public void setVendors(Vendors vendors) {
		this.vendors = vendors;
	}

	@Column(name = "discount_value", nullable = false, precision = 22, scale = 0)
	public double getDiscountValue() {
		return this.discountValue;
	}

	public void setDiscountValue(double discountValue) {
		this.discountValue = discountValue;
	}

	@Column(name = "discount_unit", nullable = false)
	public String getDiscountUnit() {
		return this.discountUnit;
	}

	public void setDiscountUnit(String discountUnit) {
		this.discountUnit = discountUnit;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "start_time", nullable = false, length = 19)
	public Date getStartTime() {
		return this.startTime;
	}

	public void setStartTime(Date startTime) {
		this.startTime = startTime;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "end_time", nullable = false, length = 19)
	public Date getEndTime() {
		return this.endTime;
	}

	public void setEndTime(Date endTime) {
		this.endTime = endTime;
	}

	@Column(name = "min_order_value", nullable = false, precision = 22, scale = 0)
	public double getMinOrderValue() {
		return this.minOrderValue;
	}

	public void setMinOrderValue(double minOrderValue) {
		this.minOrderValue = minOrderValue;
	}

	@Column(name = "max_discount_amount", nullable = false, precision = 22, scale = 0)
	public double getMaxDiscountAmount() {
		return this.maxDiscountAmount;
	}

	public void setMaxDiscountAmount(double maxDiscountAmount) {
		this.maxDiscountAmount = maxDiscountAmount;
	}

	@Column(name = "redeem_allowed", nullable = false)
	public boolean isRedeemAllowed() {
		return this.redeemAllowed;
	}

	public void setRedeemAllowed(boolean redeemAllowed) {
		this.redeemAllowed = redeemAllowed;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "created_at", nullable = false, length = 19)
	public Date getCreatedAt() {
		return this.createdAt;
	}

	public void setCreatedAt(Date createdAt) {
		this.createdAt = createdAt;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "upadeted_at", nullable = false, length = 19)
	public Date getUpadetedAt() {
		return this.upadetedAt;
	}

	public void setUpadetedAt(Date upadetedAt) {
		this.upadetedAt = upadetedAt;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "deleted_at", length = 19)
	public Date getDeletedAt() {
		return this.deletedAt;
	}

	public void setDeletedAt(Date deletedAt) {
		this.deletedAt = deletedAt;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "vouchers")
	public Set<VouchersCampaigns> getVouchersCampaignses() {
		return this.vouchersCampaignses;
	}

	public void setVouchersCampaignses(Set<VouchersCampaigns> vouchersCampaignses) {
		this.vouchersCampaignses = vouchersCampaignses;
	}

}
