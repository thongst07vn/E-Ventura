package com.eventura.entities;
// Generated Jun 19, 2025, 12:03:09â€¯AM by Hibernate Tools 4.3.6.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.FetchType;
import jakarta.persistence.GeneratedValue;
import static jakarta.persistence.GenerationType.IDENTITY;
import jakarta.persistence.Id;
import jakarta.persistence.JoinColumn;
import jakarta.persistence.JoinTable;
import jakarta.persistence.ManyToMany;
import jakarta.persistence.Table;
import jakarta.persistence.Temporal;
import jakarta.persistence.TemporalType;
import jakarta.persistence.UniqueConstraint;

/**
 * Vouchers generated by hbm2java
 */
@Entity
@Table(name = "vouchers", uniqueConstraints = @UniqueConstraint(columnNames = "voucher_code"))
public class Vouchers implements java.io.Serializable {

	private Integer id;
	private Integer vendorId;
	private int orderId;
	private double discountValue;
	private String discountUnit;
	private Date startTime;
	private Date endTime;
	private String voucherCode;
	private double minOrderValue;
	private double maxDiscountValue;
	private boolean redeemAllowed;
	private Date createdAt;
	private Date updatedAt;
	private Date deletedAt;
	private Set<CampaignRedemptions> campaignRedemptionses = new HashSet<CampaignRedemptions>(0);
	private Set<Orders> orderses = new HashSet<Orders>(0);

	public Vouchers() {
	}

	public Vouchers(int orderId, double discountValue, String discountUnit, Date startTime, Date endTime,
			String voucherCode, double minOrderValue, double maxDiscountValue, boolean redeemAllowed, Date createdAt,
			Date updatedAt) {
		this.orderId = orderId;
		this.discountValue = discountValue;
		this.discountUnit = discountUnit;
		this.startTime = startTime;
		this.endTime = endTime;
		this.voucherCode = voucherCode;
		this.minOrderValue = minOrderValue;
		this.maxDiscountValue = maxDiscountValue;
		this.redeemAllowed = redeemAllowed;
		this.createdAt = createdAt;
		this.updatedAt = updatedAt;
	}

	public Vouchers(Integer vendorId, int orderId, double discountValue, String discountUnit, Date startTime,
			Date endTime, String voucherCode, double minOrderValue, double maxDiscountValue, boolean redeemAllowed,
			Date createdAt, Date updatedAt, Date deletedAt, Set<CampaignRedemptions> campaignRedemptionses,
			Set<Orders> orderses) {
		this.vendorId = vendorId;
		this.orderId = orderId;
		this.discountValue = discountValue;
		this.discountUnit = discountUnit;
		this.startTime = startTime;
		this.endTime = endTime;
		this.voucherCode = voucherCode;
		this.minOrderValue = minOrderValue;
		this.maxDiscountValue = maxDiscountValue;
		this.redeemAllowed = redeemAllowed;
		this.createdAt = createdAt;
		this.updatedAt = updatedAt;
		this.deletedAt = deletedAt;
		this.campaignRedemptionses = campaignRedemptionses;
		this.orderses = orderses;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@Column(name = "vendor_id")
	public Integer getVendorId() {
		return this.vendorId;
	}

	public void setVendorId(Integer vendorId) {
		this.vendorId = vendorId;
	}

	@Column(name = "order_id", nullable = false)
	public int getOrderId() {
		return this.orderId;
	}

	public void setOrderId(int orderId) {
		this.orderId = orderId;
	}

	@Column(name = "discount_value", nullable = false, precision = 22, scale = 0)
	public double getDiscountValue() {
		return this.discountValue;
	}

	public void setDiscountValue(double discountValue) {
		this.discountValue = discountValue;
	}

	@Column(name = "discount_unit", nullable = false)
	public String getDiscountUnit() {
		return this.discountUnit;
	}

	public void setDiscountUnit(String discountUnit) {
		this.discountUnit = discountUnit;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "start_time", nullable = false, length = 19)
	public Date getStartTime() {
		return this.startTime;
	}

	public void setStartTime(Date startTime) {
		this.startTime = startTime;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "end_time", nullable = false, length = 19)
	public Date getEndTime() {
		return this.endTime;
	}

	public void setEndTime(Date endTime) {
		this.endTime = endTime;
	}

	@Column(name = "voucher_code", unique = true, nullable = false)
	public String getVoucherCode() {
		return this.voucherCode;
	}

	public void setVoucherCode(String voucherCode) {
		this.voucherCode = voucherCode;
	}

	@Column(name = "min_order_value", nullable = false, precision = 22, scale = 0)
	public double getMinOrderValue() {
		return this.minOrderValue;
	}

	public void setMinOrderValue(double minOrderValue) {
		this.minOrderValue = minOrderValue;
	}

	@Column(name = "max_discount_value", nullable = false, precision = 22, scale = 0)
	public double getMaxDiscountValue() {
		return this.maxDiscountValue;
	}

	public void setMaxDiscountValue(double maxDiscountValue) {
		this.maxDiscountValue = maxDiscountValue;
	}

	@Column(name = "redeem_allowed", nullable = false)
	public boolean isRedeemAllowed() {
		return this.redeemAllowed;
	}

	public void setRedeemAllowed(boolean redeemAllowed) {
		this.redeemAllowed = redeemAllowed;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "created_at", nullable = false, length = 19)
	public Date getCreatedAt() {
		return this.createdAt;
	}

	public void setCreatedAt(Date createdAt) {
		this.createdAt = createdAt;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "updated_at", nullable = false, length = 19)
	public Date getUpdatedAt() {
		return this.updatedAt;
	}

	public void setUpdatedAt(Date updatedAt) {
		this.updatedAt = updatedAt;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "deleted_at", length = 19)
	public Date getDeletedAt() {
		return this.deletedAt;
	}

	public void setDeletedAt(Date deletedAt) {
		this.deletedAt = deletedAt;
	}

	@ManyToMany(fetch = FetchType.LAZY, mappedBy = "voucherses")
	public Set<CampaignRedemptions> getCampaignRedemptionses() {
		return this.campaignRedemptionses;
	}

	public void setCampaignRedemptionses(Set<CampaignRedemptions> campaignRedemptionses) {
		this.campaignRedemptionses = campaignRedemptionses;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "vouchers_orders", joinColumns = {
			@JoinColumn(name = "voucher_order_id", nullable = false, updatable = false) }, inverseJoinColumns = {
					@JoinColumn(name = "order_id", nullable = false, updatable = false) })
	public Set<Orders> getOrderses() {
		return this.orderses;
	}

	public void setOrderses(Set<Orders> orderses) {
		this.orderses = orderses;
	}

}
