package com.eventura.entities;
// Generated Jul 2, 2025, 11:54:26â€¯PM by Hibernate Tools 4.3.6.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import org.springframework.format.annotation.DateTimeFormat;

import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.FetchType;
import jakarta.persistence.GeneratedValue;
import static jakarta.persistence.GenerationType.IDENTITY;
import jakarta.persistence.Id;
import jakarta.persistence.JoinColumn;
import jakarta.persistence.ManyToOne;
import jakarta.persistence.OneToMany;
import jakarta.persistence.Table;
import jakarta.persistence.Temporal;
import jakarta.persistence.TemporalType;

/**
 * Coupons generated by hbm2java
 */
@Entity
@Table(name = "coupons")
public class Coupons implements java.io.Serializable {

	private Integer id;
	private Products products;
	private Vendors vendors;
	private double discountValue;
	private String discountUnit;
	@DateTimeFormat(pattern = "yyyy-MM-dd'T'HH:mm") 
	private Date startTime;
	@DateTimeFormat(pattern = "yyyy-MM-dd'T'HH:mm") 
	private Date endTime;
	private boolean redeemAllowed;
	private int quantity;
	private Date createdAt;
	private Date updatedAt;
	private Date deletedAt;
	private Set<CouponsCampaigns> couponsCampaignses = new HashSet<CouponsCampaigns>(0);

	public Coupons() {
	}

	public Coupons(Products products, Vendors vendors, double discountValue, String discountUnit, Date startTime,
			Date endTime, boolean redeemAllowed, int quantity, Date createdAt, Date updatedAt) {
		this.products = products;
		this.vendors = vendors;
		this.discountValue = discountValue;
		this.discountUnit = discountUnit;
		this.startTime = startTime;
		this.endTime = endTime;
		this.redeemAllowed = redeemAllowed;
		this.quantity = quantity;
		this.createdAt = createdAt;
		this.updatedAt = updatedAt;
	}

	public Coupons(Products products, Vendors vendors, double discountValue, String discountUnit, Date startTime,
			Date endTime, boolean redeemAllowed, int quantity, Date createdAt, Date updatedAt, Date deletedAt,
			Set<CouponsCampaigns> couponsCampaignses) {
		this.products = products;
		this.vendors = vendors;
		this.discountValue = discountValue;
		this.discountUnit = discountUnit;
		this.startTime = startTime;
		this.endTime = endTime;
		this.redeemAllowed = redeemAllowed;
		this.quantity = quantity;
		this.createdAt = createdAt;
		this.updatedAt = updatedAt;
		this.deletedAt = deletedAt;
		this.couponsCampaignses = couponsCampaignses;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "product_id", nullable = false)
	public Products getProducts() {
		return this.products;
	}

	public void setProducts(Products products) {
		this.products = products;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "vendor_id", nullable = false)
	public Vendors getVendors() {
		return this.vendors;
	}

	public void setVendors(Vendors vendors) {
		this.vendors = vendors;
	}

	@Column(name = "discount_value", nullable = false, precision = 22, scale = 0)
	public double getDiscountValue() {
		return this.discountValue;
	}

	public void setDiscountValue(double discountValue) {
		this.discountValue = discountValue;
	}

	@Column(name = "discount_unit", nullable = false)
	public String getDiscountUnit() {
		return this.discountUnit;
	}

	public void setDiscountUnit(String discountUnit) {
		this.discountUnit = discountUnit;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "start_time", nullable = false, length = 19)
	public Date getStartTime() {
		return this.startTime;
	}

	public void setStartTime(Date startTime) {
		this.startTime = startTime;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "end_time", nullable = false, length = 19)
	public Date getEndTime() {
		return this.endTime;
	}

	public void setEndTime(Date endTime) {
		this.endTime = endTime;
	}

	@Column(name = "redeem_allowed", nullable = false)
	public boolean isRedeemAllowed() {
		return this.redeemAllowed;
	}

	public void setRedeemAllowed(boolean redeemAllowed) {
		this.redeemAllowed = redeemAllowed;
	}

	@Column(name = "quantity", nullable = false)
	public int getQuantity() {
		return this.quantity;
	}

	public void setQuantity(int quantity) {
		this.quantity = quantity;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "created_at", nullable = false, length = 19)
	public Date getCreatedAt() {
		return this.createdAt;
	}

	public void setCreatedAt(Date createdAt) {
		this.createdAt = createdAt;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "updated_at", nullable = false, length = 19)
	public Date getUpdatedAt() {
		return this.updatedAt;
	}

	public void setUpdatedAt(Date updatedAt) {
		this.updatedAt = updatedAt;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "deleted_at", length = 19)
	public Date getDeletedAt() {
		return this.deletedAt;
	}

	public void setDeletedAt(Date deletedAt) {
		this.deletedAt = deletedAt;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "coupons")
	public Set<CouponsCampaigns> getCouponsCampaignses() {
		return this.couponsCampaignses;
	}

	public void setCouponsCampaignses(Set<CouponsCampaigns> couponsCampaignses) {
		this.couponsCampaignses = couponsCampaignses;
	}

}
