package com.eventura.entities;
// Generated Jul 2, 2025, 11:54:26â€¯PM by Hibernate Tools 4.3.6.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.FetchType;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.Id;
import jakarta.persistence.JoinColumn;
import jakarta.persistence.ManyToOne;
import jakarta.persistence.OneToMany;
import jakarta.persistence.OneToOne;
import jakarta.persistence.PrimaryKeyJoinColumn;
import jakarta.persistence.Table;
import jakarta.persistence.Temporal;
import jakarta.persistence.TemporalType;
import org.hibernate.annotations.GenericGenerator;
import org.hibernate.annotations.Parameter;

/**
 * Vendors generated by hbm2java
 */
@Entity
@Table(name = "vendors")
public class Vendors implements java.io.Serializable {

	private Integer id;
	private Users users;
	private VendorSettings vendorSettings;
	private String name;
	private String description;
	private String contactName;
	private String contactEmail;
	private Date createdAt;
	private Date updatedAt;
	private Set<Commissions> commissionses = new HashSet<Commissions>(0);
	private Set<VendorReviews> vendorReviewses = new HashSet<VendorReviews>(0);
	private Set<Products> productses = new HashSet<Products>(0);
	private Set<Vouchers> voucherses = new HashSet<Vouchers>(0);
	private Set<VendorEarnings> vendorEarningses = new HashSet<VendorEarnings>(0);
	private Set<Coupons> couponses = new HashSet<Coupons>(0);
	private Set<VendorProductCategory> vendorProductCategories = new HashSet<VendorProductCategory>(0);

	public Vendors() {
	}

	public Vendors(Users users, VendorSettings vendorSettings, String name, String description, String contactName,
			String contactEmail, Date createdAt, Date updatedAt) {
		this.users = users;
		this.vendorSettings = vendorSettings;
		this.name = name;
		this.description = description;
		this.contactName = contactName;
		this.contactEmail = contactEmail;
		this.createdAt = createdAt;
		this.updatedAt = updatedAt;
	}

	public Vendors(Users users, VendorSettings vendorSettings, String name, String description, String contactName,
			String contactEmail, Date createdAt, Date updatedAt, Set<Commissions> commissionses,
			Set<VendorReviews> vendorReviewses, Set<Products> productses, Set<Vouchers> voucherses,
			Set<VendorEarnings> vendorEarningses, Set<Coupons> couponses,
			Set<VendorProductCategory> vendorProductCategories) {
		this.users = users;
		this.vendorSettings = vendorSettings;
		this.name = name;
		this.description = description;
		this.contactName = contactName;
		this.contactEmail = contactEmail;
		this.createdAt = createdAt;
		this.updatedAt = updatedAt;
		this.commissionses = commissionses;
		this.vendorReviewses = vendorReviewses;
		this.productses = productses;
		this.voucherses = voucherses;
		this.vendorEarningses = vendorEarningses;
		this.couponses = couponses;
		this.vendorProductCategories = vendorProductCategories;
	}

	@GenericGenerator(name = "generator", strategy = "foreign", parameters = @Parameter(name = "property", value = "users"))
	@Id
	@GeneratedValue(generator = "generator")

	@Column(name = "id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@OneToOne(fetch = FetchType.LAZY)
	@PrimaryKeyJoinColumn
	public Users getUsers() {
		return this.users;
	}

	public void setUsers(Users users) {
		this.users = users;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "vendor_setting_id", nullable = false)
	public VendorSettings getVendorSettings() {
		return this.vendorSettings;
	}

	public void setVendorSettings(VendorSettings vendorSettings) {
		this.vendorSettings = vendorSettings;
	}

	@Column(name = "name", nullable = false)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "description", nullable = false)
	public String getDescription() {
		return this.description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	@Column(name = "contact_name", nullable = false)
	public String getContactName() {
		return this.contactName;
	}

	public void setContactName(String contactName) {
		this.contactName = contactName;
	}

	@Column(name = "contact_email", nullable = false)
	public String getContactEmail() {
		return this.contactEmail;
	}

	public void setContactEmail(String contactEmail) {
		this.contactEmail = contactEmail;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "created_at", nullable = false, length = 19)
	public Date getCreatedAt() {
		return this.createdAt;
	}

	public void setCreatedAt(Date createdAt) {
		this.createdAt = createdAt;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "updated_at", nullable = false, length = 19)
	public Date getUpdatedAt() {
		return this.updatedAt;
	}

	public void setUpdatedAt(Date updatedAt) {
		this.updatedAt = updatedAt;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "vendors")
	public Set<Commissions> getCommissionses() {
		return this.commissionses;
	}

	public void setCommissionses(Set<Commissions> commissionses) {
		this.commissionses = commissionses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "vendors")
	public Set<VendorReviews> getVendorReviewses() {
		return this.vendorReviewses;
	}

	public void setVendorReviewses(Set<VendorReviews> vendorReviewses) {
		this.vendorReviewses = vendorReviewses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "vendors")
	public Set<Products> getProductses() {
		return this.productses;
	}

	public void setProductses(Set<Products> productses) {
		this.productses = productses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "vendors")
	public Set<Vouchers> getVoucherses() {
		return this.voucherses;
	}

	public void setVoucherses(Set<Vouchers> voucherses) {
		this.voucherses = voucherses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "vendors")
	public Set<VendorEarnings> getVendorEarningses() {
		return this.vendorEarningses;
	}

	public void setVendorEarningses(Set<VendorEarnings> vendorEarningses) {
		this.vendorEarningses = vendorEarningses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "vendors")
	public Set<Coupons> getCouponses() {
		return this.couponses;
	}

	public void setCouponses(Set<Coupons> couponses) {
		this.couponses = couponses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "vendors")
	public Set<VendorProductCategory> getVendorProductCategories() {
		return this.vendorProductCategories;
	}

	public void setVendorProductCategories(Set<VendorProductCategory> vendorProductCategories) {
		this.vendorProductCategories = vendorProductCategories;
	}

}
