package com.eventura.entities;
// Generated Jun 17, 2025, 7:55:23â€¯PM by Hibernate Tools 4.3.6.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.FetchType;
import jakarta.persistence.GeneratedValue;
import static jakarta.persistence.GenerationType.IDENTITY;
import jakarta.persistence.Id;
import jakarta.persistence.JoinColumn;
import jakarta.persistence.ManyToOne;
import jakarta.persistence.OneToMany;
import jakarta.persistence.Table;
import jakarta.persistence.Temporal;
import jakarta.persistence.TemporalType;

/**
 * Orders generated by hbm2java
 */
@Entity
@Table(name = "orders")
public class Orders implements java.io.Serializable {

	private Integer id;
	private Users users;
	private String name;
	private Long totalAmount;
	private String ordersStatus;
	private Date createdAt;
	private Date updatedAt;
	private Set<OrderItems> orderItemses = new HashSet<OrderItems>(0);
	private Set<Payments> paymentses = new HashSet<Payments>(0);
	private Set<OrdersCoupons> ordersCouponses = new HashSet<OrdersCoupons>(0);
	private Set<VendorEarnings> vendorEarningses = new HashSet<VendorEarnings>(0);
	private Set<Commissions> commissionses = new HashSet<Commissions>(0);

	public Orders() {
	}

	public Orders(Date createdAt, Date updatedAt) {
		this.createdAt = createdAt;
		this.updatedAt = updatedAt;
	}

	public Orders(Users users, String name, Long totalAmount, String ordersStatus, Date createdAt, Date updatedAt,
			Set<OrderItems> orderItemses, Set<Payments> paymentses, Set<OrdersCoupons> ordersCouponses,
			Set<VendorEarnings> vendorEarningses, Set<Commissions> commissionses) {
		this.users = users;
		this.name = name;
		this.totalAmount = totalAmount;
		this.ordersStatus = ordersStatus;
		this.createdAt = createdAt;
		this.updatedAt = updatedAt;
		this.orderItemses = orderItemses;
		this.paymentses = paymentses;
		this.ordersCouponses = ordersCouponses;
		this.vendorEarningses = vendorEarningses;
		this.commissionses = commissionses;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "user_id")
	public Users getUsers() {
		return this.users;
	}

	public void setUsers(Users users) {
		this.users = users;
	}

	@Column(name = "name")
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "total_amount", precision = 10, scale = 0)
	public Long getTotalAmount() {
		return this.totalAmount;
	}

	public void setTotalAmount(Long totalAmount) {
		this.totalAmount = totalAmount;
	}

	@Column(name = "orders_status")
	public String getOrdersStatus() {
		return this.ordersStatus;
	}

	public void setOrdersStatus(String ordersStatus) {
		this.ordersStatus = ordersStatus;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "created_at", nullable = false, length = 19)
	public Date getCreatedAt() {
		return this.createdAt;
	}

	public void setCreatedAt(Date createdAt) {
		this.createdAt = createdAt;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "updated_at", nullable = false, length = 19)
	public Date getUpdatedAt() {
		return this.updatedAt;
	}

	public void setUpdatedAt(Date updatedAt) {
		this.updatedAt = updatedAt;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "orders")
	public Set<OrderItems> getOrderItemses() {
		return this.orderItemses;
	}

	public void setOrderItemses(Set<OrderItems> orderItemses) {
		this.orderItemses = orderItemses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "orders")
	public Set<Payments> getPaymentses() {
		return this.paymentses;
	}

	public void setPaymentses(Set<Payments> paymentses) {
		this.paymentses = paymentses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "orders")
	public Set<OrdersCoupons> getOrdersCouponses() {
		return this.ordersCouponses;
	}

	public void setOrdersCouponses(Set<OrdersCoupons> ordersCouponses) {
		this.ordersCouponses = ordersCouponses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "orders")
	public Set<VendorEarnings> getVendorEarningses() {
		return this.vendorEarningses;
	}

	public void setVendorEarningses(Set<VendorEarnings> vendorEarningses) {
		this.vendorEarningses = vendorEarningses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "orders")
	public Set<Commissions> getCommissionses() {
		return this.commissionses;
	}

	public void setCommissionses(Set<Commissions> commissionses) {
		this.commissionses = commissionses;
	}

}
