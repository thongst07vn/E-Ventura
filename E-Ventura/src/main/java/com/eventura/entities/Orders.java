package com.eventura.entities;
// Generated Jun 30, 2025, 6:31:20â€¯PM by Hibernate Tools 4.3.6.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.FetchType;
import jakarta.persistence.GeneratedValue;
import static jakarta.persistence.GenerationType.IDENTITY;
import jakarta.persistence.Id;
import jakarta.persistence.JoinColumn;
import jakarta.persistence.ManyToOne;
import jakarta.persistence.OneToMany;
import jakarta.persistence.Table;
import jakarta.persistence.Temporal;
import jakarta.persistence.TemporalType;

/**
 * Orders generated by hbm2java
 */
@Entity
@Table(name = "orders")
public class Orders implements java.io.Serializable {

	private Integer id;
	private Users users;
	private String name;
	private double totalAmount;
	private String userAddress;
	private Date paymentDate;
	private String paymentMethod;
	private Date createdAt;
	private Date updatedAt;
	private Set<OrderItems> orderItemses = new HashSet<OrderItems>(0);
	private Set<OrdersCampaigns> ordersCampaignses = new HashSet<OrdersCampaigns>(0);
	private Set<VendorEarnings> vendorEarningses = new HashSet<VendorEarnings>(0);
	private Set<Commissions> commissionses = new HashSet<Commissions>(0);

	public Orders() {
	}

	public Orders(Users users, String name, double totalAmount, String userAddress, String paymentMethod,
			Date createdAt, Date updatedAt) {
		this.users = users;
		this.name = name;
		this.totalAmount = totalAmount;
		this.userAddress = userAddress;
		this.paymentMethod = paymentMethod;
		this.createdAt = createdAt;
		this.updatedAt = updatedAt;
	}

	public Orders(Users users, String name, double totalAmount, String userAddress, Date paymentDate,
			String paymentMethod, Date createdAt, Date updatedAt, Set<OrderItems> orderItemses,
			Set<OrdersCampaigns> ordersCampaignses, Set<VendorEarnings> vendorEarningses,
			Set<Commissions> commissionses) {
		this.users = users;
		this.name = name;
		this.totalAmount = totalAmount;
		this.userAddress = userAddress;
		this.paymentDate = paymentDate;
		this.paymentMethod = paymentMethod;
		this.createdAt = createdAt;
		this.updatedAt = updatedAt;
		this.orderItemses = orderItemses;
		this.ordersCampaignses = ordersCampaignses;
		this.vendorEarningses = vendorEarningses;
		this.commissionses = commissionses;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "user_id", nullable = false)
	public Users getUsers() {
		return this.users;
	}

	public void setUsers(Users users) {
		this.users = users;
	}

	@Column(name = "name", nullable = false)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "total_amount", nullable = false, precision = 22, scale = 0)
	public double getTotalAmount() {
		return this.totalAmount;
	}

	public void setTotalAmount(double totalAmount) {
		this.totalAmount = totalAmount;
	}

	@Column(name = "user_address", nullable = false)
	public String getUserAddress() {
		return this.userAddress;
	}

	public void setUserAddress(String userAddress) {
		this.userAddress = userAddress;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "payment_date", length = 19)
	public Date getPaymentDate() {
		return this.paymentDate;
	}

	public void setPaymentDate(Date paymentDate) {
		this.paymentDate = paymentDate;
	}

	@Column(name = "payment_method", nullable = false)
	public String getPaymentMethod() {
		return this.paymentMethod;
	}

	public void setPaymentMethod(String paymentMethod) {
		this.paymentMethod = paymentMethod;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "created_at", nullable = false, length = 19)
	public Date getCreatedAt() {
		return this.createdAt;
	}

	public void setCreatedAt(Date createdAt) {
		this.createdAt = createdAt;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "updated_at", nullable = false, length = 19)
	public Date getUpdatedAt() {
		return this.updatedAt;
	}

	public void setUpdatedAt(Date updatedAt) {
		this.updatedAt = updatedAt;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "orders")
	public Set<OrderItems> getOrderItemses() {
		return this.orderItemses;
	}

	public void setOrderItemses(Set<OrderItems> orderItemses) {
		this.orderItemses = orderItemses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "orders")
	public Set<OrdersCampaigns> getOrdersCampaignses() {
		return this.ordersCampaignses;
	}

	public void setOrdersCampaignses(Set<OrdersCampaigns> ordersCampaignses) {
		this.ordersCampaignses = ordersCampaignses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "orders")
	public Set<VendorEarnings> getVendorEarningses() {
		return this.vendorEarningses;
	}

	public void setVendorEarningses(Set<VendorEarnings> vendorEarningses) {
		this.vendorEarningses = vendorEarningses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "orders")
	public Set<Commissions> getCommissionses() {
		return this.commissionses;
	}

	public void setCommissionses(Set<Commissions> commissionses) {
		this.commissionses = commissionses;
	}

}
